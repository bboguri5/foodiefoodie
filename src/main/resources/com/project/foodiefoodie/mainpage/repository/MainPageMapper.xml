<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.project.foodiefoodie.mainpage.repository.MainPageMapper">

    <resultMap id="mpMap" type="com.project.foodiefoodie.mainpage.domain.MainPage">
        <result property="promotionBno" column="promotion_bno"/>
        <result property="businessNo" column="business_no"/>
        <result property="storeName" column="store_name"/>
        <result property="storeAddress" column="store_address"/>
        <result property="avgStarRate" column="avg_star_rate"/>
        <result property="reviewCnt" column="review_cnt"/>
        <result property="hotDeal" column="hot_deal"/>
        <result property="filePath" column="file_path"/>
        <result property="discountPrice" column="discount_price"/>
    </resultMap>

    <resultMap id="ppMap" type="com.project.foodiefoodie.mainpage.dto.MainPagePremiumDTO">
        <result property="promotionBno" column="promotion_bno"/>
        <result property="businessNo" column="business_no"/>
        <result property="storeName" column="store_name"/>
        <result property="storeAddress" column="store_address"/>
        <result property="avgStarRate" column="avg_star_rate"/>
        <result property="reviewCnt" column="review_cnt"/>
        <result property="hotDeal" column="hot_deal"/>
        <result property="filePath" column="file_path"/>
        <result property="discountPrice" column="discount_price"/>
    </resultMap>

    <!-- 메인 페이지에 평점 높은 7개 가게 불러오기 -->
    <select id="findTopToday" resultMap="mpMap">
        SELECT promotion_bno, business_no, store_name, store_address, avg_star_rate, review_cnt, hot_deal, file_path,
        discount_price, hashTag
        FROM ( SELECT *
        FROM promotion_board P JOIN master M
        ON P.business_no = M.business_no
        LEFT OUTER JOIN hot_deal H
        ON H.business_no = P.business_no
        ORDER BY avg_star_rate DESC
        ) sub
        WHERE ROWNUM BETWEEN 1 AND 7
    </select>

    <!-- 오늘의 맛집 평점 순으로 전체 불러오기 -->
    <select id="findTopTodayAll" resultMap="mpMap">
        SELECT promotion_bno, business_no, store_name, store_address, avg_star_rate, review_cnt, hot_deal, file_path,
        discount_price, hashTag
        FROM (SELECT ROWNUM rn, sub.*
        FROM ( SELECT *
        FROM promotion_board P JOIN master M
        ON P.business_no = M.business_no
        LEFT OUTER JOIN hot_deal H
        ON H.business_no = P.business_no
        ORDER BY avg_star_rate DESC
        ) sub)
        WHERE rn BETWEEN (#{pageNum} - 1) * #{amount} + 1 AND (#{pageNum} * #{amount})
    </select>

    <!-- 오늘의 맛집 개수 계산 -->
    <select id="getTotalCnt" resultType="int">
        SELECT COUNT(*)
        FROM promotion_board
    </select>

    <!-- 기한이 지나지 않은 월정액 가게 랜덤으로 메인 페이지에 7개 불러오기 -->
    <select id="findRandPremium" resultMap="ppMap">
        SELECT * FROM (
        SELECT P.business_no, promotion_bno, store_name, store_address, avg_star_rate, review_cnt, hot_deal, file_path,
        discount_price, start_date, end_date, hashTag
        FROM promotion_board P JOIN master M
        ON P.business_no = M.business_no
        LEFT OUTER JOIN hot_deal H
        ON H.business_no = P.business_no
        WHERE promotion_bno IN ( SELECT promotion_bno FROM premiume_promotion_board WHERE end_date >= (SELECT TO_CHAR
        (SYSDATE, 'YYYYMMDD') "NOW" FROM DUAL))
        ORDER BY DBMS_RANDOM.RANDOM ) sub
        WHERE ROWNUM BETWEEN 1 AND 7
    </select>

    <!-- 월정액 가게 전체 불러오기 -->
    <select id="findAllPremium" resultMap="ppMap">
        SELECT *
        FROM (SELECT ROWNUM rn, sub.*
        FROM (
        SELECT P.business_no, promotion_bno, store_name, store_address, avg_star_rate, review_cnt, hot_deal, file_path,
        discount_price, start_date, end_date, hashTag
        FROM promotion_board P JOIN master M
        ON P.business_no = M.business_no
        LEFT OUTER JOIN hot_deal H
        ON H.business_no = P.business_no
        WHERE promotion_bno IN ( SELECT promotion_bno FROM premiume_promotion_board WHERE end_date >= (SELECT TO_CHAR
        (SYSDATE, 'YYYYMMDD') "NOW" FROM DUAL))
        ORDER BY end_date
        ) sub)
        WHERE rn BETWEEN (#{pageNum} - 1) * #{amount} + 1 AND (#{pageNum} * #{amount})
    </select>

    <!-- 프리미엄 가게 개수 계산 -->
    <select id="getPremiumCnt" resultType="int">
        SELECT COUNT(*)
        FROM premiume_promotion_board WHERE end_date >= (SELECT TO_CHAR
        (SYSDATE, 'YYYYMMDD') "NOW" FROM DUAL)
    </select>

    <!-- 현재 위치에 있는 랜덤 6개 가게 불러오기  -->
    <select id="findLocationRand" resultMap="mpMap">
        SELECT *
        FROM (
        SELECT P.business_no, promotion_bno, store_name, store_address, avg_star_rate, review_cnt, hot_deal, file_path,
        discount_price, hashTag
        FROM promotion_board P JOIN master M
        ON P.business_no = M.business_no
        LEFT OUTER JOIN hot_deal H
        ON H.business_no = P.business_no
        WHERE store_address LIKE '%' || #{storeAddress}|| '%'
        ORDER BY DBMS_RANDOM.RANDOM
        ) sub
        WHERE ROWNUM BETWEEN 1 AND 5
    </select>

    <!-- 현재 위치에 있는 가게 전체 불러오기  -->
    <select id="findAllInLocation" resultMap="mpMap">
        SELECT *
        FROM (SELECT ROWNUM rn, sub.*
        FROM (
        SELECT P.business_no, promotion_bno, store_name, store_address, avg_star_rate, review_cnt, hot_deal, file_path,
        discount_price, hashTag
        FROM promotion_board P JOIN master M
        ON P.business_no = M.business_no
        LEFT OUTER JOIN hot_deal H
        ON H.business_no = P.business_no
        WHERE store_address LIKE '%' || #{storeAddress}|| '%'
        ORDER avg_star_rate
        ) sub)
        WHERE rn BETWEEN (#{page.pageNum} - 1) * #{page.amount} + 1 AND (#{page.pageNum} * #{page.amount})
    </select>

    <!-- 현재 위치에 있는 가게 개수 계산 -->
    <select id="getLocationCnt" resultType="int">
        SELECT COUNT(*)
        FROM master M JOIN promotion_board P
        ON M.business_no = P.business_no
        WHERE store_address LIKE '%' || #{storeAddress}|| '%'
    </select>

    <!-- hot deal 랜덤 6개 목록 요청-->
    <select id="findRandHotDeal" resultMap="mpMap">
        SELECT * FROM (
        SELECT P.business_no, promotion_bno, store_name, store_address, avg_star_rate, review_cnt, hot_deal, file_path,
        discount_price, hashTag
        FROM promotion_board P JOIN hot_deal H
        ON P.business_no = H.business_no
        JOIN master M
        ON H.business_no = M.business_no ) sub
        WHERE ROWNUM BETWEEN 1 AND 6
    </select>

    <!-- hot deal 목록 요청-->
    <select id="findAllHotDeal" resultMap="mpMap">
        SELECT *
        FROM (SELECT ROWNUM rn, sub.*
        FROM (
        SELECT P.business_no, promotion_bno, store_name, store_address, avg_star_rate, review_cnt, hot_deal, file_path,
        discount_price, hashTag
        FROM promotion_board P JOIN hot_deal H
        ON P.business_no = H.business_no
        JOIN master M
        ON H.business_no = M.business_no ) sub)
        WHERE rn BETWEEN (#{pageNum} - 1) * #{amount} + 1 AND (#{pageNum} * #{amount})
    </select>

    <!-- 기간 내 핫딜 개수 -->
    <select id="getHotDealCnt" resultType="int">
        SELECT COUNT(*)
        FROM hot_deal
    </select>

    <!-- 해당 해쉬태그 개수 구하기 -->
    <select id="findHashTagCount" resultType="int">
        SELECT COUNT(*)
        FROM promotion_board
        WHERE hashTag LIKE '%' || #{hashTag} || '%'
    </select>

    <!-- 해당 해쉬태그 리스트 가져오기 -->
    <select id="findHashTag" resultMap="mpMap">
        SELECT *
        FROM (SELECT ROWNUM rn, t_pb.*
        FROM (
        SELECT P.business_no, promotion_bno, store_name, store_address, avg_star_rate, review_cnt, hot_deal, file_path,
        discount_price, hashTag
        FROM promotion_board P JOIN master M
        ON P.business_no = M.business_no
        LEFT OUTER JOIN hot_deal H
        ON H.business_no = P.business_no
        WHERE hashTag LIKE '%' || #{hashTag} || '%'
        ORDER BY avg_star_rate DESC
        ) t_pb)
        WHERE rn BETWEEN (#{page.pageNum} - 1) * #{page.amount} + 1 AND (#{page.pageNum} * #{page.amount})
    </select>

    <!-- 해당 서치 리스트 가져오기 -->
    <select id="findAllSearch" resultMap="mpMap">
        SELECT *
        FROM (SELECT ROWNUM rn, t_pb.*
        FROM (
        SELECT P.business_no, promotion_bno, store_name, store_address, avg_star_rate, review_cnt, hot_deal, file_path,
        discount_price, hashTag
        FROM promotion_board P JOIN master M
        ON P.business_no = M.business_no
        LEFT OUTER JOIN hot_deal H
        ON H.business_no = P.business_no
        WHERE store_address LIKE '%' || #{s.keyword} || '%'
        OR store_name LIKE '%' || #{s.keyword} || '%'
        OR hashTag LIKE '%' || #{s.keyword} || '%'
        <if test="sort == 'star'">ORDER BY avg_star_rate DESC</if>
        <if test="sort == 'latest'">ORDER BY P.last_updated</if>
        ) t_pb)
        WHERE rn BETWEEN (#{s.pageNum} - 1) * #{s.amount} + 1 AND (#{s.pageNum} * #{s.amount})
    </select>

    <!-- 해당 서치 개수 -->
    <select id="getTotalCount" resultType="int">
        SELECT COUNT(*)
        FROM promotion_board P JOIN master M
        ON P.business_no = M.business_no
        WHERE store_address LIKE '%' || #{keyword} || '%'
        OR store_name LIKE '%' || #{keyword} || '%'
        OR hashTag LIKE '%' || #{keyword} || '%'
    </select>

    <select id="isOpen" resultType="String">
        <![CDATA[
        SELECT
        CASE
        WHEN (SELECT TO_CHAR(SYSDATE,'DY') FROM dual) IN (SELECT closedday FROM promotion_store_time) THEN 'not open'
        WHEN breakstarttime <= (SELECT TO_CHAR
        (SYSDATE, 'HH24:MI') "NOW" FROM DUAL) AND breakendtime >= (SELECT TO_CHAR
        (SYSDATE, 'HH24:MI') "NOW" FROM DUAL) THEN 'break time'
        WHEN weekdayclosetime >= (SELECT TO_CHAR
        (SYSDATE, 'HH24:MI') "NOW" FROM DUAL) AND weekdayopentime <= (SELECT TO_CHAR
        (SYSDATE, 'HH24:MI') "NOW" FROM DUAL) THEN 'open'
        ELSE 'closed'
        END AS StoreTimeText
        FROM promotion_store_time
        WHERE promotion_bno = #{promotionBno}
        ]]>
    </select>

</mapper>