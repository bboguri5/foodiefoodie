<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.project.foodiefoodie.member.repository.MemberMapper">

    <resultMap id="memberMap" type="com.project.foodiefoodie.member.domain.Member">
        <result column="nick_name" property="nickName" />
        <result column="phone_number" property="phoneNumber"/>
        <result column="regist_date" property="regDate"/>
        <result column="login_time" property="recentLoginTime"/>
        <result column="detail_address" property="detailAddress"/>
        <result column="extra_address" property="extraAddress"/>
    </resultMap>


    <select id="isDuplicate" resultType="int">
        SELECT COUNT(*)
        FROM member
        <if test="type=='email'">
        WHERE email = #{value}
        </if>
        <if test="type=='nickName'">
        WHERE nick_name = #{value}
        </if>
    </select>


    <select id="findMember" resultMap="memberMap">
        SELECT *
        FROM member
        WHERE email = #{email}
    </select>


    <insert id="register">
        INSERT INTO member
            (email, password, nick_name, phone_number, birth, address, detail_address,
            <if test="extraAddress != null">
                extra_address,
            </if>
            name, gender)
        VALUES
            (#{email}, #{password}, #{nickName}, #{phoneNumber}, #{birth}, #{address}, #{detailAddress},
            <if test="extraAddress != null">
                #{extraAddress},
            </if>
            #{name}, #{gender})
    </insert>



    <delete id="deleteMember">
        DELETE FROM member
        WHERE email = #{email}
    </delete>


    <update id="modifyMember">
        UPDATE member
        SET nick_name = #{nickName}, phone_number = #{phoneNumber} , address = #{address}
        WHERE email = #{email}
    </update>

    <!--  비밀번호 일치 불일치 하려고 만드는것   -->
    <select id="findPassword" resultType="string">
        SELECT password
        FROM member
        WHERE email = #{email}
    </select>





    
    
    <insert id="saveAutoLoginValue">
        INSERT INTO auto_login
            (email, session_id, logout_time)
        VALUES
            (#{email}, #{sessionId}, #{limitTime})
    </insert>

    <resultMap id="autoLogin" type="com.project.foodiefoodie.member.dto.login.AutoLoginDTO">
        <result column="session_id" property="sessionId"/>
        <result column="logout_time" property="limitTime"/>
    </resultMap>

    <select id="findIsAutoLoginBySessionId" resultMap="autoLogin">
        SELECT email, session_id, logout_time
        FROM auto_login
        WHERE session_id = #{sessionId}
    </select>

    <delete id="deleteAutoLoginValue">
        DELETE FROM auto_login
        WHERE email = #{email}
    </delete>

    <select id="findAll" resultMap="memberMap">
        SELECT * FROM member
    </select>

    <select id="findCommon" resultMap="memberMap">
        SELECT * FROM member
        WHERE auth = 'COMMON'
    </select>

    <select id="findOneCommon" resultMap="memberMap">
        SELECT * FROM member
        WHERE email = #{email}
    </select>

    <delete id="remove">
        DELETE FROM member
        WHERE email = #{email}
    </delete>

    <select id="findEmail" resultType="string">
        SELECT email
        FROM member
        WHERE name = #{name}
            AND birth = #{birth}
            AND phone_number = #{phoneNumber}
    </select>

    <select id="findPw" resultType="int">
        SELECT COUNT(*)
        FROM member
        WHERE email = #{email}
            AND name = #{name}
            AND birth = #{birth}
            AND phone_number = #{phoneNumber}
    </select>

    <update id="changePw">
        UPDATE member
        SET password = #{encodedPw}
        WHERE email = #{email}
    </update>
</mapper>


