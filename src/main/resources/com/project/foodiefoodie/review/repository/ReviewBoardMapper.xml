<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.project.foodiefoodie.review.repository.ReviewBoardMapper">

    <resultMap id="rbMap" type="com.project.foodiefoodie.review.domain.ReviewBoard">
        <result property="businessNo" column="business_no"/>
        <result property="reviewBno" column="review_bno"/>
        <result property="lastUpdated" column="last_updated"/>
        <result property="likeCnt" column="like_cnt"/>
        <result property="starRate" column="star_rate"/>
        <result property="isPrivate" column="private"/>
    </resultMap>

    <resultMap id="rbDTOMap" type="com.project.foodiefoodie.review.dto.ReviewBoardDTO">
        <result property="reviewBno" column="review_bno"/>
        <result property="lastUpdated" column="last_updated"/>
        <result property="likeCnt" column="like_cnt"/>
        <result property="starRate" column="star_rate"/>
        <result property="businessNo" column="business_no"/>
        <result property="storeName" column="store_name"/>
        <result property="storeAddress" column="store_address"/>
    </resultMap>

    <resultMap id="ruMap" type="com.project.foodiefoodie.review.domain.ReviewUpload">
        <result property="reviewBno" column="review_bno"/>
        <result property="filePath" column="file_path"/>
        <result property="fileName" column="file_name"/>
    </resultMap>

    <resultMap id="likeMap" type="com.project.foodiefoodie.review.domain.ReviewLike">
        <result property="reviewBno" column="review_bno"/>
    </resultMap>


    <insert id="save">
        INSERT INTO review_board (email, title, content, review_bno, business_no, star_rate)
        VALUES (#{email}, #{title}, #{content}, seq_review_board.nextval, #{businessNo},#{starRate})
    </insert>

    <!--  해당 가게 평균 평점 구하기  -->
    <select id="getStarRate" resultType="double">
        SELECT ROUND(AVG(star_rate), 2)
        FROM review_board
        WHERE business_no=#{businessNo}
    </select>

    <!--  해당 가게 리뷰 개수 구하기  -->
    <select id="getReviewCnt" resultType="Long">
        SELECT COUNT(star_rate)
        FROM review_board
        WHERE business_no=#{businessNo}
    </select>

    <select id="findAllReviews" resultMap="rbDTOMap">
        SELECT rb.review_bno, rb.email, rb.title, rb.content, rb.last_updated, rb.star_rate, rb.like_cnt, m.business_no, m.store_name, m.store_address
        FROM review_board rb
        JOIN master m
        ON rb.business_no = m.business_no
        WHERE private = 'F'
        ORDER BY rb.last_updated DESC
    </select>

    <select id="findOneReview" resultMap="rbDTOMap" resultType="long">
        SELECT rb.review_bno, rb.email, rb.title, rb.content, rb.last_updated, rb.star_rate, rb.like_cnt, m.business_no, m.store_name, m.store_address
        FROM review_board rb
        JOIN master m
        ON rb.business_no = m.business_no
        WHERE rb.review_bno = #{reviewBno}
    </select>

    <select id="searchAllReview" resultMap="rbDTOMap">
        SELECT rb.review_bno, rb.email, rb.title, rb.content, rb.last_updated, rb.star_rate, rb.like_cnt, m.business_no, m.store_name, m.store_address
        FROM review_board rb
        JOIN master m
        ON rb.business_no = m.business_no
        WHERE private = 'F'
        AND rb.email LIKE '%' || #{search}|| '%'
        OR rb.title LIKE '%' || #{search}|| '%'
        OR rb.content LIKE '%' || #{search}|| '%'
        OR m.store_name LIKE '%' || #{search}|| '%'
        OR m.store_address LIKE '%' || #{search}|| '%'
        ORDER BY rb.last_updated DESC
    </select>

    <insert id="reviewUpload">
        INSERT INTO review_upload
        VALUES (#{reviewBno}, #{filePath}, #{fileName})
    </insert>

    <select id="findReviewUploads" resultMap="ruMap">
        SELECT review_bno, file_path
        FROM review_upload
        WHERE review_bno = #{reviewBno}
    </select>

    <update id="upLike">
        UPDATE review_board
        SET like_cnt = (SELECT like_cnt FROM review_board WHERE review_bno = #{reviewBno}) + 1
        WHERE review_bno = #{reviewBno}
    </update>

    <update id="downLike">
        UPDATE review_board
        SET like_cnt = (SELECT like_cnt FROM review_board WHERE review_bno = #{reviewBno}) - 1
        WHERE review_bno = #{reviewBno}
    </update>

    <insert id="saveReviewLike">
        INSERT INTO review_like
        VALUES (#{reviewBno}, #{email})
    </insert>

    <delete id="deleteReviewLike">
        DELETE FROM review_like WHERE review_bno=#{reviewBno} AND email=#{email}
    </delete>

    <select id="getLike" resultType="int">
        SELECT like_cnt
        FROM review_board
        WHERE review_bno = #{reviewBno}
    </select>

    <select id="isLiked" resultType="int">
        SELECT COUNT(*) FROM review_like WHERE email=#{email} AND review_bno=#{reviewBno}
    </select>



</mapper>